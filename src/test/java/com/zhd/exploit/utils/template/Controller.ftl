package ${packageNameRoot}.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.WebDataBinder;
import org.springframework.web.bind.annotation.InitBinder;
import org.springframework.web.bind.annotation.ModelAttribute;

import ${packageNameRoot}.entity.${ClassName};
import ${packageNameRoot}.service.${ClassName}Service;

@Controller
@RequestMapping("/${className}")
public class ${ClassName}Controller {
	@Autowired
	private ${ClassName}Service ${className}Service;

	@InitBinder("${className}")
	public void initBinder1(WebDataBinder binder) {
		binder.setFieldDefaultPrefix("${className}.");
	}
	
	@RequestMapping(value = "/queryAll" )
	public String queryAll(Model model) {
		List<${ClassName}> ${classNames} = ${className}Service.queryAll();
		model.addAttribute("${classNames}", ${classNames});
		return "${className}/${className}-list";
	}
	
	@RequestMapping(value = "/showAdd" )
	public String showAdd() {
		return "${className}/${className}-add";
	}
	
	@RequestMapping(value = "/add" )
	public String add(@ModelAttribute ${ClassName} ${className}, Model model) {
		${className}Service.add(${className});
		return queryAll(model);
	}
	
	@RequestMapping(value = "/showUpdate" )
	public String showUpdate(@ModelAttribute ${Primarykey} ${primarykey}, Model model) {
		${ClassName} ${className} = ${className}Service.selectByPrimaryKey(${primarykey});
		model.addAttribute("${className}", ${className});
		return "${className}/${className}-update";
	}
	
	@RequestMapping(value = "/update" )
	public String update(@ModelAttribute ${ClassName} ${className}, Model model) {
		${className}Service.update(${className});
		return queryAll(model);
	}
	
	@RequestMapping(value = "/delete" )
	public String delete(@ModelAttribute ${Primarykey} ${primarykey}, Model model) {
		${className}Service.delete(${primarykey});
		return queryAll(model);
	}

}
