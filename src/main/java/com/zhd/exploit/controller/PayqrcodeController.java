package com.zhd.exploit.controller;

import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.WebDataBinder;
import org.springframework.web.bind.annotation.InitBinder;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.commons.CommonsMultipartFile;

import com.zhd.exploit.entity.Payqrcode;
import com.zhd.exploit.service.PayqrcodeService;

@Controller
@RequestMapping("/payqrcode")
public class PayqrcodeController {
	
	private static Logger logger = LoggerFactory.getLogger(PayqrcodeController.class);

	@Autowired
	private PayqrcodeService payqrcodeService;

	@InitBinder("payqrcode")
	public void initBinder1(WebDataBinder binder) {
		binder.setFieldDefaultPrefix("payqrcode.");
	}

	@RequestMapping(value = "/queryAll")
	public String queryAll(Model model) {
		List<Payqrcode> payqrcodes = payqrcodeService.queryAll();
		model.addAttribute("payqrcodes", payqrcodes);
		return "payqrcode/payqrcode-list";
	}

	@RequestMapping(value = "/showAdd")
	public String showAdd() {
		return "payqrcode/payqrcode-add";
	}

	@RequestMapping(value = "/add")
	public String add(@ModelAttribute Payqrcode payqrcode, Model model) {
		payqrcodeService.add(payqrcode);
		return queryAll(model);
	}

	@RequestMapping(value = "/showUpdate")
	public String showUpdate(Integer codeid, Model model) {
		Payqrcode payqrcode = payqrcodeService.selectByPrimaryKey(codeid);
		model.addAttribute("payqrcode", payqrcode);
		return "payqrcode/payqrcode-update";
	}

	@RequestMapping(value = "/update")
	public String update(@ModelAttribute Payqrcode payqrcode, Model model) {
		payqrcodeService.update(payqrcode);
		return queryAll(model);
	}

	@RequestMapping(value = "/delete")
	public String delete(Integer codeid, Model model) {
		payqrcodeService.delete(codeid);
		return queryAll(model);
	}

	@RequestMapping(value = "/uploadQrcode", method = RequestMethod.POST)
	@ResponseBody
	public String uploadQrcode(@RequestParam("file") CommonsMultipartFile file) {
		if (file != null) {// 判断上传的文件是否为空
			logger.info(file.getOriginalFilename());
			return payqrcodeService.uploadQrcode(file);
		}else{
			logger.info("file is null");
		}
		return "";
	}

}
