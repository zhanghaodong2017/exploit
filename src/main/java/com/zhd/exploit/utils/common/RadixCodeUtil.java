package com.zhd.exploit.utils.common;

import java.util.Random;

/**
 * @author hanxiaorui
 * @date 2018年5月30日
 * @work TODO
 * @version V1.0
 */
public class RadixCodeUtil {

	/** 自定义进制（不要0、1、O、L这些容易混淆的字符） */
	private static final char[] RADIX_ARR = new char[] { 'Q', 'W', 'E', '8', 'A', 'S', '2', 'D', 'Z', 'X', '9', 'C', '7', 'P', '5', 'K', 'L', 'M',
			'J', '3', 'U', 'F', 'R', '4', 'Y', 'T', 'N', '6', 'B', 'G', 'H' };

	/** 特殊分隔符，分隔随机数 */
	private static final char SEPERATOR = 'V';

	/** 邀请码长度 */
	private static final int DEFAULT_LENGTH = 6;

	/**
	 * 根据ID生成随机码(默认长度6位)
	 * 
	 * @param id
	 * @return
	 */
	public static String encode(long id) {
		return encode(id, DEFAULT_LENGTH);
	}

	/**
	 * 根据ID生成随机码
	 * 
	 * @param id ID
	 * @return 随机码
	 */
	public static String encode(long id, int length) {
		int charPos = 32;
		char[] buf = new char[charPos];
		while ((id / RADIX_ARR.length) > 0) {
			int ind = (int) (id % RADIX_ARR.length);
			buf[--charPos] = RADIX_ARR[ind];
			id /= RADIX_ARR.length;
		}
		buf[--charPos] = RADIX_ARR[(int) (id % RADIX_ARR.length)];
		String str = new String(buf, charPos, (32 - charPos));
		// 不够长度的自动随机补全
		if (str.length() < length) {
			StringBuilder sb = new StringBuilder();
			sb.append(SEPERATOR);
			Random rnd = new Random();
			for (int i = 1; i < length - str.length(); i++) {
				sb.append(RADIX_ARR[rnd.nextInt(RADIX_ARR.length)]);
			}
			str += sb.toString();
		}
		return str;
	}
}
