<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
        http://www.springframework.org/schema/beans/spring-beans.xsd    
        http://www.springframework.org/schema/mvc   
        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd    
        http://www.springframework.org/schema/context   
        http://www.springframework.org/schema/context/spring-context.xsd  
        http://www.springframework.org/schema/tx    
        http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
	<!-- 开启注解 -->
	<mvc:annotation-driven />
	<!-- 配置自定扫描包 -->
	<context:component-scan base-package="com.zhd.exploit.*" />
<!-- 	<context:component-scan base-package="com.zhd.exploit.service.*" />
	<context:component-scan base-package="com.zhd.exploit.filter.*" /> -->

	<!-- 处理静态资源 -->
	<!-- <mvc:default-servlet-handler/> -->
	<mvc:resources mapping="/resources/**" location="/resources/" />

	<!--避免IE执行AJAX时，返回JSON出现下载文件 -->
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>

	<!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
	<bean
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<!-- 设置响应支持的类型 -->
				<value>text/html;charset=UTF-8</value>
				<!-- 设置请求body支持的类型 -->
				<value>application/x-www-form-urlencoded</value>
				<value>application/json;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	<!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 默认编码 -->
		<property name="defaultEncoding" value="utf-8" />
		<!-- 文件大小最大值 -->
		<property name="maxUploadSize" value="10485760000" />
		<!-- 内存中的最大值 -->
		<property name="maxInMemorySize" value="40960" />
		<!-- 启用是为了推迟文件解析，以便捕获文件大小异常 -->
		<property name="resolveLazily" value="true" />
	</bean>
	<!-- 配置ViewResolver 。可用多个ViewResolver 。使用order属性排序。 InternalResourceViewResolver 
		放在最后 -->
	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="order" value="1"></property>
		<property name="mediaTypes">
			<map>
				<!-- 告诉视图解析器，返回的类型为json格式 -->
				<entry key="json" value="application/json" />
				<entry key="xml" value="application/xml" />
				<entry key="htm" value="text/htm" />
			</map>
		</property>
		<property name="defaultViews">
			<list>
				<!-- ModelAndView里的数据变成JSON -->
				<bean
					class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" />
			</list>
		</property>
		<property name="ignoreAcceptHeader" value="true"></property>
	</bean>


	<!-- 定义跳转的文件的前后缀 ，视图模式配置 -->
	<bean id="jspviewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
		<property name="order" value="0" />
	</bean>
	<bean id="htmlviewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="order" value="1" />
		<property name="prefix" value="/WEB-INF/"/>  
		<property name="suffix" value=".html" />
		<property name="contentType" value="text/html;charset=UTF-8"></property>
	</bean>


	<!-- 拦截器 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.zhd.exploit.interceptor.LoginInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors>

</beans>